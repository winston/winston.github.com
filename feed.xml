<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WinstonYW</title>
    <description>This is the blog of Winston Teo Yong Wei.</description>
    <link>http://winstonyw.com</link>
    <atom:link href="http://winstonyw.com/feed.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ruby - Reading A Remote Zip File</title>
      <description>&lt;p&gt;I need to access a remote zip file and this is something that works:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# In the console, gem install &quot;httparty&quot;
require &quot;httparty&quot;

# In the console, gem install &quot;rubyzip&quot;
require &quot;zip&quot;

# Get the contents of the remote zip file via HTTParty
# and write it into a temp zip file

zipfile = Tempfile.new(&quot;file&quot;)
zipfile.binmode # This might not be necessary depending on the zip file
zipfile.write(HTTParty.get(&quot;http://localhost:3000/file.zip&quot;).body)
zipfile.close

# Unzip the temp zip file and process the contents
# Let garbage collection delete the temp zip file

Zip::File.open(zipfile.path) do |file|
  file.each do |content|
    data = file.read(content)
    puts data
    # Do whatever you want with the contents
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code is simple, but at the start, I kept getting an error when unzipping the temp zip file,
and I thought I was doing something wrong.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;End-of-central-directory signature not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Did some debugging and finally figured out that the problem was with the remote zip file
- because the file was not fully constructed even though I had a link to it.&lt;/p&gt;

&lt;p&gt;The remote zip file link was actually returned by an earlier API call to an external service
that also triggered the building of the remote zip file.&lt;/p&gt;

&lt;p&gt;Moral of the story? Trust my code.&lt;/p&gt;

&lt;p&gt;Anyway, &lt;a href=&quot;http://blog.huangzhimin.com/2012/10/02/avoid-using-rubyzip/&quot;&gt;RubyZip is poor in performance&lt;/a&gt;. Might want to try &lt;a href=&quot;http://zipruby.rubyforge.org/&quot;&gt;ZipRuby&lt;/a&gt; instead.&lt;/p&gt;
</description>
      <pubDate>Tue, 01 Oct 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/10/01/ruby_reading_a_remote_zip_file/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/10/01/ruby_reading_a_remote_zip_file/</guid>
    </item>
    
    <item>
      <title>GoogleVisualr</title>
      <description>&lt;p&gt;In 2008, I worked at &lt;a href=&quot;http://wego.com&quot;&gt;Wego.com&lt;/a&gt; and I had to build a Google Analytics clone from scratch.
The main reason for that was because Google Analytics didn't have an open API back then.
The collected data was important to the P&amp;amp;L as it was used to bill our partners (CPM/CPC)
and so it's crucial that we maintain absolute control over it.&lt;/p&gt;

&lt;p&gt;The tool, aptly named Wegonomics, eventually also had the billing functionalities built in.&lt;/p&gt;

&lt;p&gt;Anyway, it had a few interesting components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A JavaScript tracking script that tracked all of your searching and clicking activities (partly reverse-engineered from the famous ga.js) to log files.&lt;/li&gt;
&lt;li&gt;A Ruby parser that parsed the log files and dumped meaningful data into a database.
I also built some fuzzy algorithms to de-dup and de-fraud the searches and clicks because the accuracy of the data affects the P&amp;amp;L of the business.&lt;/li&gt;
&lt;li&gt;A Rails application that sliced and diced the data for analysis by the management.
The app started with only tables but I gradually added charts to the app so as to create a good analytics dashabord that provided insights to the numbers.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Each component was interesting on its own, and I was pretty proud of my work back then.
Looking back.. Not so, because I left my successor without any tests. &lt;em&gt;Terribly guilty!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Anyway, as part of the Rails app,
I wrote a RubyGem to help with the generation of charts,
and this post is really about that - &lt;a href=&quot;https://github.com/winston/google_visualr&quot;&gt;GoogleVisualr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To draw the charts, I picked &lt;a href=&quot;https://developers.google.com/chart/&quot;&gt;Google Charts&lt;/a&gt;
because it's free and easy to get started with.
It's basically a JavaScript library and you'll write JavaScript to draw the charts.&lt;/p&gt;

&lt;p&gt;The generation of the charts is pretty easy and straight forward:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pick the chart type, e.g. Bar chart, Line chart etc.&lt;/li&gt;
&lt;li&gt;Pass data into the chart&lt;/li&gt;
&lt;li&gt;Draw the chart&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That's assuming you already have the data. But where do you usually get the data from?&lt;/p&gt;

&lt;p&gt;In any SQL-backed apps, you'll have to retrieve the data from the DB with Ruby/Python etc,
convert the data into JavaScript objects somehow (simplest is to embed it in the views),
and write JavaScript to use the data and generate the chart with it.&lt;/p&gt;

&lt;p&gt;Context switching between Ruby and JavaScript is troublesome..&lt;/p&gt;

&lt;p&gt;And so, that's how GoogleVisualr came about - a Ruby wrapper around the Google Charts.
Now I can manipulate the numbers and construct the charts in Ruby,
and the RubyGem provides a method to auto-generate the JavaScript required for the charts in the view!&lt;/p&gt;

&lt;p&gt;This simplicity works for most use cases, unless you require interactivity with the charts.
Then you'll still need to write JavaScript for that.&lt;/p&gt;

&lt;p&gt;A really basic example:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In your layout, load Google Ajax API in the head tag, at the very top.&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script src='https://www.google.com/jsapi'&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;In a controller, e.g. &lt;code&gt;app/controllers/charts_controller.rb&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def area_chart
  data_table = GoogleVisualr::DataTable.new
  # Add Column Headers
  data_table.new_column('string', 'Year' )
  data_table.new_column('number', 'Sales')
  data_table.new_column('number', 'Expenses')

  # Add Rows and Values
  data_table.add_rows([
      ['2004', 1000, 400],
      ['2005', 1170, 460],
      ['2006', 660, 1120],
      ['2007', 1030, 540]
  ])

  option = { width: 400, height: 240, title: 'Company Performance' }
  @chart = GoogleVisualr::Interactive::AreaChart.new(data_table, option)
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;In the corresponding view, e.g. &lt;code&gt;app/views/charts/area_chart.html.erb&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div id='chart'&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;%= render_chart(@chart, 'chart') %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go ahead! Check out &lt;a href=&quot;https://github.com/winston/google_visualr&quot;&gt;GoogleVisualr on GitHub&lt;/a&gt; or the &lt;a href=&quot;http://googlevisualr.herokuapp.com/&quot;&gt;Docs&lt;/a&gt; now.&lt;/p&gt;

&lt;p&gt;These are the slides which I presented at the Singapore Ruby Meetup on 14 Apr 2010.
Definitely outdated, but it still explains the intention and basics of the RubyGem well.&lt;/p&gt;

&lt;iframe src=&quot;http://www.slideshare.net/slideshow/embed_code/3737737&quot; width=&quot;427&quot; height=&quot;356&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&quot; allowfullscreen&gt; &lt;/iframe&gt;

</description>
      <pubDate>Thu, 19 Sep 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/09/19/googlevisualr/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/09/19/googlevisualr/</guid>
    </item>
    
    <item>
      <title>Pairing And Email Sign Off</title>
      <description>&lt;p&gt;There's something that stuck with me since I started doing pair programming -
signing off emails as a pair &lt;em&gt;&quot;Winston and [My Pair]&quot;&lt;/em&gt;
whenever we have to reply to emails while pairing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&quot;Why?&quot;&lt;/em&gt; - I was asked once. I can't relate the exact story anymore, but the incident
which made me conscious of doing that happened on the first few days of working at Pivotal Labs.&lt;/p&gt;

&lt;p&gt;I was pairing with Nate Clark then, and he had to shoot an email out to our clients perhaps. After he finished writing the email, he signed off as &quot;Nate &amp;amp; Winston&quot;.&lt;/p&gt;

&lt;p&gt;Somehow, that simple gesture made me feel &lt;strong&gt;welcomed, trusted, and respected as a pair&lt;/strong&gt; - that I was not just a pair of eyes looking over his shoulder.&lt;/p&gt;

&lt;p&gt;Soon, I also realized that it's not just Nate who was doing that but all of the other Pivots whom I had a chance to work with.&lt;/p&gt;

&lt;p&gt;Being &lt;strong&gt;mindful&lt;/strong&gt; of your pair makes your pair happy, and you'll be happy too!&lt;/p&gt;
</description>
      <pubDate>Tue, 27 Aug 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/08/27/pairing_and_email_sign_off/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/08/27/pairing_and_email_sign_off/</guid>
    </item>
    
    <item>
      <title>RedDotRubyConf 2013 - Wrap Up</title>
      <description>&lt;p&gt;It's been a few weeks since RDRC 2013. Good time to do a wrap up!&lt;/p&gt;

&lt;p&gt;For those who have missed it, I have also written a
&lt;a href=&quot;http://winstonyw.com/2013/06/12/reddotrubyconf_2013_-_thank_you/&quot;&gt;Thank You&lt;/a&gt; post which contains links to speakers' slides and related resources.&lt;/p&gt;

&lt;h2&gt;RDRC 2013: The Beginning&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/andycroll&quot;&gt;Andy Croll&lt;/a&gt; broke the news to some of us last Oct
that he's going back to the UK in Dec and would like to handover RedDotRubyConf to someone.&lt;/p&gt;

&lt;p&gt;On a personal note, I really wanted to do RDRC because I would like to contribute back
to the Ruby community in Singapore, as I wouldn't be who I am or where I am if not for Ruby.&lt;/p&gt;

&lt;p&gt;After a few days of consideration, and support from &lt;a href=&quot;https://twitter.com/carlcoryell&quot;&gt;Carl&lt;/a&gt;,
I decided to volunteer myself and my colleagues also gladly offered to help out wherever they can.&lt;/p&gt;

&lt;p&gt;With that, I roped in Abhaya, Wei, Mohan, and Carl also offered various administrative help.
But by and large, this was a community event, ran by individuals who really love Ruby.&lt;/p&gt;

&lt;h2&gt;ToDo List&lt;/h2&gt;

&lt;p&gt;In December 2012, I got started.&lt;/p&gt;

&lt;p&gt;These were the stuff that had to be done, arranged according to importance.&lt;/p&gt;

&lt;h3&gt;Dates&lt;/h3&gt;

&lt;p&gt;June 7 and 8 were picked purposefully a weekend after &lt;a href=&quot;http://rubykaigi.org/2013/&quot;&gt;RubyKaigi&lt;/a&gt;,
based on a thought that some of the speakers and audience of RubyKaigi wouldn't mind coming down to Singapore the week after.&lt;/p&gt;

&lt;p&gt;The strategy worked.&lt;/p&gt;

&lt;h3&gt;Great Speakers&lt;/h3&gt;

&lt;p&gt;We have heard of them and seen them in vids. How cool would it be to see them in person!
I was audacious and sent out emails to a number of them. 7 said yes and the rest is history.
I was actually prepared to be rejected by all of them, so I am really grateful for their replies.
Anyway, the big names really helped to drive the early ticket sales too.&lt;/p&gt;

&lt;p&gt;I think I was really lucky. Next year, I hope I'll be as lucky.&lt;/p&gt;

&lt;h3&gt;Venue&lt;/h3&gt;

&lt;p&gt;RDRC required a venue that's accessible and inexpensive.
There were several choices:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lecture Theatres in National University of Singapore&lt;/li&gt;
&lt;li&gt;NUS Alumni House / Shaw Foundation&lt;/li&gt;
&lt;li&gt;RedDot Museum&lt;/li&gt;
&lt;li&gt;NTUC Auditorium&lt;/li&gt;
&lt;li&gt;NUS UCC&lt;/li&gt;
&lt;li&gt;Biopolis&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Biopolis was the best option out of them all, because it's:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;available on June 7 and 8,&lt;/li&gt;
&lt;li&gt;near to the train station,&lt;/li&gt;
&lt;li&gt;a really nice auditorium with great facilities,&lt;/li&gt;
&lt;li&gt;inexpensive as compared to most of the other choices.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Besides, Lecture Theatres in NUS are only available to students; not even an alumni.&lt;/p&gt;

&lt;h3&gt;Sponsors&lt;/h3&gt;

&lt;p&gt;Sponsors were also crucial to the plan.&lt;/p&gt;

&lt;p&gt;We reached out to companies who are proponents of the Ruby language,
and we are really grateful to the companies who were able to help make this event possible.&lt;/p&gt;

&lt;p&gt;Besides the usual cash sponsorships, we also wanted to get sponsorships that we can give directly as swag to all participants,
and we did it with freebies like Ruby course and ebook.&lt;/p&gt;

&lt;h3&gt;Conference Format&lt;/h3&gt;

&lt;p&gt;The format of RDRC 2013 was kept similar to the previous years, with the addition of Lightning Talks.&lt;/p&gt;

&lt;p&gt;Although we only had enough Lightning Talks to fit Day 1, it was a good experiment, IMO.
And feedback has been pretty positive so far, so hopefully next year more local speakers
will sign up for the Lightning Talk slots.&lt;/p&gt;

&lt;h3&gt;Other Logistics&lt;/h3&gt;

&lt;p&gt;The 5 todos above were the major stuff that had to happen before the rest could.&lt;/p&gt;

&lt;p&gt;The other conference logistics consisted of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Logo Design&lt;/li&gt;
&lt;li&gt;Website Design and Coding&lt;/li&gt;
&lt;li&gt;Ticketing&lt;/li&gt;
&lt;li&gt;Marketing (Regional Ruby Groups, Emails from previous RDRCs)&lt;/li&gt;
&lt;li&gt;Call For Proposals&lt;/li&gt;
&lt;li&gt;Program Scheduling&lt;/li&gt;
&lt;li&gt;T-shirts and Swag (Stickers, FieldNotes, Lanyards)&lt;/li&gt;
&lt;li&gt;Design + Printing of Posters, Banners, Programs&lt;/li&gt;
&lt;li&gt;Food and Drinks&lt;/li&gt;
&lt;li&gt;After Party&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To get all these done, a ton of emails were sent..&lt;/p&gt;

&lt;p&gt;Not easy for someone who's much more used to writing in Ruby prose!&lt;/p&gt;

&lt;h2&gt;Attendees&lt;/h2&gt;

&lt;h3&gt;Registrants by Country&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/rdrc-registrants_by_country.png&quot; alt=&quot;Registrants by Country&quot; /&gt;&lt;/p&gt;

&lt;p&gt;27 countries in total - with almost 50% of the audience coming from abroad.&lt;/p&gt;

&lt;h3&gt;Registrations by Month&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/rdrc-registrations_by_month.png&quot; alt=&quot;Registrations by Month&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I believe in karma. The next time I attend a conference, I'll get the tickets early!&lt;/p&gt;

&lt;p&gt;You should too! As that helps to reduce logistical challenges and let me sleep better.&lt;/p&gt;

&lt;p&gt;Interestingly, one of the things I did to encourage sales was to email folks
who dropped off after they filled in their details but didn't complete the payment step.&lt;/p&gt;

&lt;p&gt;Some replied, telling me that their plans changed and so they were not able to make it,
while a lot actually re-registered (and paid) after the gentle reminder.&lt;/p&gt;

&lt;h2&gt;Vendors&lt;/h2&gt;

&lt;p&gt;Listing the vendors who deserve a mention!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jtc.gov.sg/Pages/Facilities-Biopolis-Phase1.aspx&quot;&gt;Matrix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.rasel.com.sg/&quot;&gt;Rasel Catering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.facebook.com/pages/Porcupine-Design/101255343267281&quot;&gt;Porcupine Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://iceman.com.sg/&quot;&gt;Uni Tat Ice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://fieldnotesbrand.com/&quot;&gt;Field Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;After Party at &lt;a href=&quot;http://www.senortaco.sg/&quot;&gt;Señor Taco&lt;/a&gt; (Contact &lt;a href=&quot;rotceh@senortaco.sg&quot;&gt;Rox&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Drinks&lt;/h3&gt;

&lt;p&gt;I ordered a total of 800+ bottles of mineral water and 1200+ cans of soda.
That was based on my assumption that 300 pax drinks an average of 3 bottles/cans per day (* 2 days).&lt;/p&gt;

&lt;p&gt;However, at the end of Day 2, there were still about 12-16 cartons of water and soda left.
You guys are not drinking enough water!&lt;/p&gt;

&lt;h2&gt;Improvements&lt;/h2&gt;

&lt;p&gt;Still &lt;a href=&quot;http://bit.ly/rdrc-feedback&quot;&gt;collecting feedback&lt;/a&gt; but I already have some ideas on what can be improved next year.&lt;/p&gt;

&lt;h3&gt;Breakfast&lt;/h3&gt;

&lt;p&gt;I was hungry in the morning, and so were all of you. Sorry!&lt;/p&gt;

&lt;h3&gt;Coffee&lt;/h3&gt;

&lt;p&gt;I received feedback that the coffee is not fantastic and I would really like to solve that.
Please give me suggestions on how to make it not suck (less getting a barista).&lt;/p&gt;

&lt;h3&gt;T-shirts&lt;/h3&gt;

&lt;p&gt;I'll make sure to get the correct sizes and measurements up on the registration site, so that you can pick one that fits.
And, female sizes too.&lt;/p&gt;

&lt;h3&gt;Swag&lt;/h3&gt;

&lt;p&gt;Thinking of doing away with the lanyard (because you have probably already discarded it).&lt;/p&gt;

&lt;h3&gt;WiFi&lt;/h3&gt;

&lt;p&gt;Some say yes. Some say no. I'll see what I can do next year.&lt;/p&gt;

&lt;h3&gt;Video&lt;/h3&gt;

&lt;p&gt;I am still a little undecided on this because I am worried that with videos,
people will have less incentive for attending RDRC, knowing that videos will be available later. True?&lt;/p&gt;

&lt;h3&gt;Local Speakers&lt;/h3&gt;

&lt;p&gt;I really would like to see more local speakers. Seriously, where are you guys!&lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;p&gt;That's it. See you all next year!&lt;/p&gt;

&lt;p&gt;Drop me an email - suggestions, compliments or criticisms. Thank you!&lt;/p&gt;
</description>
      <pubDate>Mon, 17 Jun 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/06/17/reddotrubyconf_2013_-_wrap_up/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/06/17/reddotrubyconf_2013_-_wrap_up/</guid>
    </item>
    
    <item>
      <title>RedDotRubyConf 2013 - Thank You</title>
      <description>&lt;p&gt;I didn't do this alone - RDRC 2013 is an event by the community, for the community. &lt;a href=&quot;https://twitter.com/abhayashenoy&quot;&gt;Abhaya&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/luweidewei&quot;&gt;Wei&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/mohangk&quot;&gt;Mohan&lt;/a&gt;, and many more all helped to make this happen. They are my heros!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Firstly, I would like to thank &lt;a href=&quot;http://twitter.com/andycroll&quot;&gt;Andy&lt;/a&gt; - founder of RDRC.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/rdrc-andycroll.png&quot; alt=&quot;Andy Croll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Without him, RedDotRubyConf would not had happened in 2011 and 2012, and he gave us a great conference structure which I mostly copied for RDRC 2013.&lt;/p&gt;

&lt;p&gt;Throughout the months of preparing for RDRC 2013, he was also ever helpful in providing suggestions and encouragement to us.&lt;/p&gt;

&lt;p&gt;Thank you, Andy! We missed your British humour, but we all know that Singapore has to be independent someday right? =)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secondly, a big thank you to all the speakers who made time for RDRC 2013.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/rdrc-speakers.jpg&quot; alt=&quot;Speakers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;24 speakers in all - 7 &quot;Key Notes&quot;, 12 CFPs, and 5 Lightning Talks.&lt;/p&gt;

&lt;p&gt;You guys are awesome, and the knowledge and experience that you shared with the us during the 2 days was priceless.&lt;/p&gt;

&lt;p&gt;We have all leveled up, and it's because of you guys.&lt;/p&gt;

&lt;p&gt;Thank you! Hope to see you all again, somewhere, someday.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lastly, I would like to thank everyone who attended RDRC 2013.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/rdrc-attendees.jpg&quot; alt=&quot;Attendees&quot; /&gt;&lt;/p&gt;

&lt;p&gt;300+ Rubyists from all over the World. Thank you for your support!&lt;/p&gt;

&lt;p&gt;I am also touched and encouraged by the lovely feedback that I have received thus far, and I am really grateful for making new friends amongst you all.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A little jealous though, because you all had more time to chat with the speakers than me!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;p&gt;I had a great time at RDRC 2013 and I hope everyone enjoyed themselves too.&lt;/p&gt;

&lt;p&gt;See you all next year!&lt;/p&gt;

&lt;h3&gt;Resources&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This list will be updated timely. Otherwise, &lt;a href=&quot;https://gist.github.com/cheeaun/5729325&quot;&gt;Cheeaun's list&lt;/a&gt; is pretty good too.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;Slides For Day 1&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/winston/reddotrubyconf-2013-day-1&quot;&gt;My Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aaron Patterson: &lt;a href=&quot;https://speakerdeck.com/tenderlove/reddotrubyconf&quot;&gt;Refactoring Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Aaron Patterson: &lt;a href=&quot;https://speakerdeck.com/tenderlove/americas-next-top-engineer&quot;&gt;America's Next Top Engineer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ola Bini: &lt;a href=&quot;/assets/downloads/JRubyForTheWin.pdf&quot;&gt;JRuby For The Win&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Pablo Astigarraga: &lt;a href=&quot;https://speakerdeck.com/pote/50-shades-of-mvc&quot;&gt;50 Shades of MVC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alexey Gaziev: &lt;a href=&quot;http://www.slideshare.net/gazay/gon-rdrc&quot;&gt;Rails And Javascript: Brothers In Arms Using Gon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Luismi Cavallé: &lt;a href=&quot;https://speakerdeck.com/cavalle/keep-your-activerecord-models-manageable-the-rails-way&quot;&gt;Keep Your ActiveRecord Models Manageable The Rails Way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Richard Huang: &lt;a href=&quot;http://huangzhimin.com/2013/06/07/my-presentation-at-reddotrubyconf-2013/&quot;&gt;Building Asynchronous APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Paul Gallagher: &lt;a href=&quot;http://www.slideshare.net/tardate/ruby-the-hard-bits&quot;&gt;Ruby - The Hard Bits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sakchai Siripanyawuth: &lt;a href=&quot;http://www.slideshare.net/artellectual/better-ujsforrails&quot;&gt;A Better UJS for Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Max Gorin: &lt;a href=&quot;https://speakerdeck.com/nomadcoder/client-server-gui-web-components-with-ext-js-and-rails&quot;&gt;Client-Server GUI Web Components With Ext JS And Rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bartosz Knapik: &lt;a href=&quot;https://speakerdeck.com/bartes/meet-angularjs-and-fall-in-love&quot;&gt;Meet AngularJS And Fall In Love&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Matthew Rudy Jacobs: &lt;a href=&quot;https://speakerdeck.com/matthewrudy/make-me-a-better-rubyist&quot;&gt;Make Me A Better Rubyist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kentaro Kuribayashi: &lt;a href=&quot;https://speakerdeck.com/kentaro/glint&quot;&gt;Glint - Fires Arbitrary TCP Server Processs For Tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Robert Roach: &lt;a href=&quot;http://rjayroach.files.wordpress.com/2013/06/ember_reddot_ruby_conf.pdf&quot;&gt;EmberJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jim Weirich: &lt;a href=&quot;https://github.com/jimweirich/presentation_kata_and_analysis/blob/master/pdf/KataAndAnalysis.key.pdf&quot;&gt;Code Kata And Analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Slides For Day 2&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/winston/reddotrubyconf-2013-day-2&quot;&gt;My Slides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;José Valim: &lt;a href=&quot;https://speakerdeck.com/plataformatec/concurrency-in-ruby-tools-of-the-trade&quot;&gt;Concurrency In Ruby: Tools Of The Trade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Akira Matsuda: &lt;a href=&quot;https://speakerdeck.com/a_matsuda/ruby-2-dot-0-on-rails-in-production&quot;&gt;Ruby 2.0 On Rails In Production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Simon Robson: &lt;a href=&quot;https://speakerdeck.com/shr/optimising-self-at-reddotrubyconf-2013&quot;&gt;Optimising Self&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hiroshi Shibata: &lt;a href=&quot;https://speakerdeck.com/hsbt/from-legacy-to-edge&quot;&gt;From 'Legacy' To 'Edge': Continuous Upgrades For Rails Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chang Sau Sheong: &lt;a href=&quot;https://speakerdeck.com/sausheong/playing-with-ruby&quot;&gt;Playing With Ruby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Yi-Ting Cheng: &lt;a href=&quot;http://xdite.github.io/security-basic/&quot;&gt;Secure Your Rails Application: The Basics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Christopher Rigor: Identical Environments Using Chef, AWS And Vagrant&lt;/li&gt;
&lt;li&gt;Prem Sichanugrist: &lt;a href=&quot;https://speakerdeck.com/sikachu/dependencies-testing-with-appraisal-and-bundler&quot;&gt;Dependencies Testing With Appraisal And Bundler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nigel Rausch: Fast &amp;amp; Effective View Testing&lt;/li&gt;
&lt;li&gt;Steve Klabnik: Functional Reactive Programming In Ruby&lt;/li&gt;
&lt;/ul&gt;


&lt;h4&gt;Photos&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;@reddotrubyconf's &lt;a href=&quot;https://twitter.com/reddotrubyconf/media/grid&quot;&gt;Twitter Photos&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/assets/images/rdrc-friday-hug.png&quot;&gt;Friday Hug (Actual Size)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Jobs Board&lt;/h3&gt;

&lt;p&gt;Download the &lt;a href=&quot;/assets/images/rdrc-jobs-board.jpg&quot;&gt;photo of the Jobs Board&lt;/a&gt;.&lt;/p&gt;
</description>
      <pubDate>Wed, 12 Jun 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/06/12/reddotrubyconf_2013_-_thank_you/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/06/12/reddotrubyconf_2013_-_thank_you/</guid>
    </item>
    
    <item>
      <title>Installing ImageMagick and RMagick</title>
      <description>&lt;p&gt;Specific to Mac OS X 10.7.*, ImageMagick v6.8.0-10 and RMagick v2.*.&lt;/p&gt;

&lt;p&gt;The correct way to do it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew remove imagemagick
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install imagemagick --disable-openmp --build-from-source

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/Cellar/imagemagick/6.8.0-10/lib
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ln -s libMagick++-Q16.7.dylib   libMagick++.dylib
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ln -s libMagickCore-Q16.7.dylib libMagickCore.dylib
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ln -s libMagickWand-Q16.7.dylib libMagickWand.dylib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The errors I got when I didn't install ImageMagick with the config options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;It seems your ruby installation is missing psych (for YAML output).
To eliminate this warning, please install libyaml and reinstall your ruby.
Building native extensions.  This could take a while...
ERROR:  Error installing rmagick:
    ERROR: Failed to build gem native extension.

        /Users/winston/.rvm/rubies/ruby-1.9.3-p392/bin/ruby extconf.rb
checking for Ruby version &amp;gt;= 1.8.5... yes
extconf.rb:107: Use RbConfig instead of obsolete and deprecated Config.
checking for /usr/bin/gcc-4.2... yes
checking for Magick-config... yes
checking for ImageMagick version &amp;gt;= 6.3.5... yes
checking for HDRI disabled version of ImageMagick... yes
/usr/local/bin/Magick-config: line 41: pkg-config: command not found
/usr/local/bin/Magick-config: line 47: pkg-config: command not found
/usr/local/bin/Magick-config: line 50: pkg-config: command not found
/usr/local/bin/Magick-config: line 53: pkg-config: command not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The errors I got when I didn't do the symlinks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;It seems your ruby installation is missing psych (for YAML output).
To eliminate this warning, please install libyaml and reinstall your ruby.
Building native extensions.  This could take a while...
ERROR:  Error installing rmagick:
    ERROR: Failed to build gem native extension.

        /Users/winston/.rvm/rubies/ruby-1.9.3-p392/bin/ruby extconf.rb
checking for Ruby version &amp;gt;= 1.8.5... yes
extconf.rb:107: Use RbConfig instead of obsolete and deprecated Config.
checking for /usr/bin/gcc-4.2... yes
checking for Magick-config... yes
checking for ImageMagick version &amp;gt;= 6.3.5... yes
checking for HDRI disabled version of ImageMagick... yes
checking for stdint.h... yes
checking for sys/types.h... yes
checking for wand/MagickWand.h... yes
checking for InitializeMagick() in -lMagickCore... no
checking for InitializeMagick() in -lMagick... no
Can't install RMagick 2.12.2. Can't find the ImageMagick library or one of the dependent libraries. Check the mkmf.log file for more detailed information.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And seriously, you might want to consider the &lt;a href=&quot;http://rubygems.org/gems/mini_magick&quot;&gt;MiniMagick&lt;/a&gt; gem instead.&lt;/p&gt;
</description>
      <pubDate>Thu, 21 Mar 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/03/21/installing-imagemagick-and-rmagick/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/03/21/installing-imagemagick-and-rmagick/</guid>
    </item>
    
    <item>
      <title>Test After Commit</title>
      <description>&lt;p&gt;Sometimes, you will need to test the &lt;code&gt;after_commit&lt;/code&gt; call back in Rails. Really.&lt;/p&gt;

&lt;p&gt;Such as when you are using &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt;, and you want to send your emails asynchronously through &lt;a href=&quot;https://github.com/plataformatec/devise/blob/master/lib/devise/models/authenticatable.rb#L130&quot;&gt;Devise's recommendation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Assuming that you are also using RSpec and transactional fixtures, then &lt;a href=&quot;https://github.com/grosser/test_after_commit&quot;&gt;test_after_commit&lt;/a&gt; is what you will need.&lt;/p&gt;

&lt;p&gt;The RubyGem works as expected and &lt;code&gt;bundle install&lt;/code&gt; is eaaaaasy.&lt;/p&gt;
</description>
      <pubDate>Wed, 20 Mar 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/03/20/test_after_commit/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/03/20/test_after_commit/</guid>
    </item>
    
    <item>
      <title>Form With Multiple Buttons</title>
      <description>&lt;p&gt;Suppose you have a form and you need to have two buttons that post to different locations -
button &quot;Accept&quot; posts to &lt;code&gt;/accept&lt;/code&gt; and button &quot;Reject&quot; posts to &lt;code&gt;/reject&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Without HTML5, you probably have to use JavaScript..&lt;/p&gt;

&lt;p&gt;HTML5 makes it trivial, as it introduced the &lt;a href=&quot;http://www.w3.org/html/wg/drafts/html/master/forms.html#attr-fae-form&quot;&gt;concept of &lt;em&gt;&lt;em&gt;form&lt;/em&gt;&lt;/em&gt; and &lt;em&gt;&lt;em&gt;form-associated element&lt;/em&gt;&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By default, the form owner of a submit &lt;code&gt;input&lt;/code&gt; is the nearest &lt;code&gt;form&lt;/code&gt; element ancestor,
and it would perform the action and go to the location that was specified in the &lt;code&gt;form&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;However, HTML5 allows you to specify &lt;code&gt;form&lt;/code&gt; attribute (and more) on an &lt;code&gt;input&lt;/code&gt; tag to override its default &lt;code&gt;form&lt;/code&gt; association.&lt;/p&gt;

&lt;p&gt;In code, that means you can do the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;form&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myform&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Accept&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;form=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myform&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;formmethod=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;formaction=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/accept&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Reject&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;form=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myform&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;formmethod=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;POST&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;formaction=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/reject&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Side note.. To test this in Rspec + Capybara, specs have to run with a JavaScript driver.&lt;/p&gt;

&lt;p&gt;I really dig this.&lt;/p&gt;
</description>
      <pubDate>Fri, 08 Mar 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/03/08/form_with_multiple_buttons/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/03/08/form_with_multiple_buttons/</guid>
    </item>
    
    <item>
      <title>Jekyll, Haml, Sass and GitHub Pages</title>
      <description>&lt;p&gt;A recap of how I got this Jekyll blog ready..&lt;/p&gt;

&lt;p&gt;To start, create a basic Jekyll directory following the instructions on &lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/usage&quot;&gt;Jekyll's Wiki&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;By default, Jekyll only works with HTML and CSS..&lt;/p&gt;

&lt;p&gt;To use Jekyll with Haml and Sass, markup converters have to be added.&lt;/p&gt;

&lt;p&gt;However, by design, Jekyll doesn't evaluate &lt;code&gt;layouts&lt;/code&gt; through any Haml converter.
Therefore the converter will only work for &lt;code&gt;index.haml&lt;/code&gt; that doesn't contain much code.
There are work arounds to ensure that Haml &lt;code&gt;layouts&lt;/code&gt; will get converted to HTML, but the &lt;code&gt;layouts&lt;/code&gt; wouldn't get parsed and reloaded for &lt;code&gt;jekyll --auto --server&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the end, my &lt;code&gt;layouts&lt;/code&gt; are in HTML because the rapid feedback was important to me.&lt;/p&gt;

&lt;p&gt;Anyway, to add Haml and Sass converters, create a &lt;code&gt;_plugins&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;Add a Haml converter at &lt;code&gt;_plugins/haml.rb&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;haml&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HamlConverter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Converter&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;safe&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;priority&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:low&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/haml/i&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;output_ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;.html&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Haml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;StandardError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;!!! HAML Error: &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add a Sass converter &lt;code&gt;_plugins/sass.rb&lt;/code&gt; and place &lt;code&gt;.scss&lt;/code&gt; files in &lt;code&gt;./assets/css&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Jekyll&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sass&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SassConverter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Converter&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;safe&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;priority&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:low&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/scss/i&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;output_ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;.css&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;Sass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:Engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:syntax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:scss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:load_paths&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;./assets/css/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;render&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;rescue&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;StandardError&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;!!! SASS Error: &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Everything should work up till this point, and &lt;code&gt;_site&lt;/code&gt; would contain the generated blog.&lt;/p&gt;

&lt;p&gt;However, pushing this directory straight up to GitHub will fail. &lt;a href=&quot;https://help.github.com/articles/pages-don-t-build-unable-to-run-jekyll&quot;&gt;Because plugins are evil&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The Pages server will not build with plugins that are not marked as safe.&lt;/p&gt;

&lt;p&gt;Note that this includes all plugins in the _plugins folder.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The deployment becomes slightly complex, and we'll &lt;em&gt;borrow&lt;/em&gt; some ideas from &lt;a href=&quot;http://octopress.org&quot;&gt;Octopress&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Convert the current directory branch from &lt;code&gt;master&lt;/code&gt; to &lt;code&gt;source&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; git branch -m master source
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add &lt;code&gt;_site&lt;/code&gt; to &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; echo '_site' &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a deployment directory.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; mkdir deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add &lt;code&gt;deploy&lt;/code&gt; to &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; echo 'deploy' &amp;gt;&amp;gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make &lt;code&gt;deploy&lt;/code&gt; a master branch.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; cd deploy
$&amp;gt; git init .
$&amp;gt; git commit -am &quot;Initialize&quot;
$&amp;gt; git remote add origin ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a Rake task that copies &lt;code&gt;_site&lt;/code&gt; files in &lt;code&gt;source&lt;/code&gt; branch to &lt;code&gt;deploy&lt;/code&gt; (master branch).
This Rake task will also commit and push the site to GitHub.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Deploy&amp;quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:deploy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;## Deploying to Github Pages..&amp;quot;&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deploy_dir&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/*&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rm_rf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;## Copying &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;public_dir&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; to &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deploy_dir&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cp_r&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;public_dir&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deploy_dir&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deploy_dir&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git add .&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git add -u&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;## Commiting: Site updated at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utc&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Site updated at &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utc&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git commit -m &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&amp;quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;## Pushing generated &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deploy_dir&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; website&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git push origin master --force&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;## Deploy Complete!&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, the site can now be deployed to GitHub pages!&lt;/p&gt;

&lt;p&gt;One last thing. To get syntax highlighting with Pygments, generate and include the CSS file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pygmentize -S default -f html &amp;gt; assets/css/pygments.css
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maybe I should have just used Octopress.&lt;/p&gt;
</description>
      <pubDate>Sun, 24 Feb 2013 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2013/02/24/jekyll_haml_sass_and_github_pages/</link>
      <guid isPermaLink="true">http://winstonyw.com/2013/02/24/jekyll_haml_sass_and_github_pages/</guid>
    </item>
    
    <item>
      <title>Pair Programming</title>
      <description>&lt;h3&gt;Now&lt;/h3&gt;

&lt;p&gt;I have been at &lt;a href=&quot;http://www.neo.com&quot;&gt;Neo&lt;/a&gt;, formerly New Context, and formerly formerly Pivotal Labs Singapore, for 2 years now, and I do pair programming (PP) almost everyday.&lt;/p&gt;

&lt;p&gt;When I don't, it's usually because of one of the following reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There's an odd number on the project team because someone is out for the day.&lt;/li&gt;
&lt;li&gt;I need to do research and evaluation of new technology.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;But we really value PP on the whole, and we try as much as possible to pair.&lt;/p&gt;

&lt;h3&gt;Then&lt;/h3&gt;

&lt;p&gt;Two years ago, when I first learned that PP is part of Pivotal Labs's everyday culture, I was intrigued but, at the same time, worried.
I wondered how it was like, and how I would like it.&lt;/p&gt;

&lt;p&gt;I got a taste of it during the interviews and I came out of it unharmed but exhausted.
Nevertheless, it was fun and I enjoyed it.&lt;/p&gt;

&lt;p&gt;But I was apprehensive and I deliberated for a while if I will be able to do this &lt;strong&gt;EVERY DAY&lt;/strong&gt;?
I asked Google, and I was convinced by what I read from &lt;a href=&quot;http://www.sarahmei.com/blog/2010/04/14/thoughts-on-two-months-of-pairing/&quot;&gt;Sarah Mei's blog post&lt;/a&gt;, and I have not regretted my decision.&lt;/p&gt;

&lt;h3&gt;Why Pair Programming?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Because we see lots of benefits in doing it!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;More than that, these are the usual reasons I would give when people ask me about PP:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Focus&lt;/em&gt;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;You will not do Facebook or Twitter. You will get things done!&lt;/li&gt;
&lt;li&gt;You will not go down rabbit holes unnecessarily and focus on delivery.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Knowledge Exchange&lt;/em&gt;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;PP is especially efficient in bringing new hires up to speed.&lt;/li&gt;
&lt;li&gt;PP is great for spreading technical knowledge amongst the experienced too.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Collective Code Ownership&lt;/em&gt;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;Anyone on the team can &lt;a href=&quot;http://www.martinfowler.com/bliki/CodeOwnership.html&quot;&gt;make code changes even when someone is away&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;PP means &lt;a href=&quot;http://en.wikipedia.org/wiki/Bus_factor&quot;&gt;bus factor&lt;/a&gt; != 1.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;High Code Quality&lt;/em&gt;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;You always have someone to discuss alternative designs and solutions.&lt;/li&gt;
&lt;li&gt;PP is &lt;a href=&quot;http://www.codinghorror.com/blog/2007/11/pair-programming-vs-code-reviews.html&quot;&gt;code review on steriods&lt;/a&gt; and usually leads to better code and lesser bugs.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;Happiness&lt;/em&gt;&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;At the end of each day, you deliver and you feel a great sense of satisfaction.&lt;/li&gt;
&lt;li&gt;At the end of each day, you deliver and your boss is happy.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Is Pair Programming For Everyone?&lt;/h3&gt;

&lt;p&gt;Given that PP has so many advantages, should everyone do it?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No. No. No.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The truth is, not everyone can be a pair programmer and not everyone will enjoy it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There will be some engineers who are not suitable as a pair:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &quot;Rock Star&quot;  feels you are slowing him down and he's uninterested in teaching.&lt;/li&gt;
&lt;li&gt;The &quot;Researcher&quot; just want to code in silo and get to the bottom of everything.&lt;/li&gt;
&lt;li&gt;The &quot;Judge&quot;      will question you on every keystroke.&lt;/li&gt;
&lt;li&gt;The &quot;Silencer&quot;   cannot code and talk at the same time. Not so fun..&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In such cases, it's futile to try and force PP on the engineers.&lt;/p&gt;

&lt;p&gt;However, it's then important to understand the benefits of PP and achieve all the above even without PP.&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;&lt;em&gt;Focus&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Knowledge Exchange&lt;/em&gt;&lt;/strong&gt;, those depend on individuals to make them happen.
The organization can also help by having a prioritised backlog and structured stories
to ensure that all engineers on the team are clear of their deliverables and datelines,
and also have regular catchups amongst engineers to spread new technical knowledge.&lt;/p&gt;

&lt;p&gt;To achieve &lt;strong&gt;&lt;em&gt;Collective Code Ownership&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Good Code Quality&lt;/em&gt;&lt;/strong&gt;,
the team can ensure that they have code review processes and tools in place:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/features/projects/codereview&quot;&gt;GitHub Pull Requests&lt;/a&gt; are great for code review.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://getbarkeep.org/&quot;&gt;Barkeep&lt;/a&gt; can also help.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The boundaries are limitless and these are just some suggestions that I can think of.&lt;/p&gt;

&lt;h3&gt;Do The Good Stuff&lt;/h3&gt;

&lt;p&gt;Pair Programming is not a silver bullet but it definitely increases engineering productivity.
On occasions when you can't do PP, you should still attempt to imitate the benefits of PP.&lt;/p&gt;

&lt;p&gt;As a caution, &lt;strong&gt;NO&lt;/strong&gt; teams should be transformed to do PP overnight,
because PP is a skill that has to be learned and honed, and engineers should be hired to fit the PP culture.&lt;/p&gt;

&lt;p&gt;I enjoy pair programming. It's fun.&lt;/p&gt;
</description>
      <pubDate>Sun, 02 Dec 2012 00:00:00 +0800</pubDate>
      <link>http://winstonyw.com/2012/12/02/pair_programming/</link>
      <guid isPermaLink="true">http://winstonyw.com/2012/12/02/pair_programming/</guid>
    </item>
    
  </channel>
</rss>
